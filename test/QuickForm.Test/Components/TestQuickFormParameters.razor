@inherits BaseTest

@code
{
    [SuppressMessage("ReSharper", "UnusedMember.Local")]
    private class Model
    {
        public string A { get; set; } = default!;
    }

    [Test]
    public void Test()
    {
        var model = new Model();

        var additionalAttributes = new Dictionary<string, object?>
        {
            ["class"] = "form-class"
        };

        var onSubmit = () => { };
        var onChange = () => { };

        var cut = Render(
            @<text>
                 <QuickForm TEntity="Model"
                            Model="model"
                            ValidClass="valid"
                            InvalidClass="invalid"
                            OnSubmit="@onSubmit"
                            OnModelChanged="@onChange"
                            AdditionalAttributes="additionalAttributes">
                     <ChildContent>
                         @context.InputComponent(string.Empty)
                     </ChildContent>

                     <SubmitButtonTemplate>
                         <button type="submit"></button>
                     </SubmitButtonTemplate>
                 </QuickForm>
             </text>);

        cut.MarkupMatches(
            @<text>
                 <form class="form-class" diff:ignoreAttributes>
                     <input autofocus class="input" diff:ignoreAttributes/>
                     <button type="submit"></button>
                 </form>
             </text>);

        Print(cut);
    }

    [Test]
    public void MustPassModel()
    {
        Assert.Throws<ArgumentNullException>(() =>
        {
            Render(
                @<text>
                     <QuickForm TEntity="Model"/>
                 </text>);
        });
    }

    [Test]
    public void MustNotPassAllThreeDelegates()
    {
        var model = new Model();

        Assert.Throws<InvalidOperationException>(() =>
        {
            Render(
                @<text>
                     <QuickForm Model="model"
                                OnSubmit="@(() => { })"
                                OnValidSubmit="@(() => { })"
                                OnInvalidSubmit="@(() => { })"/>
                 </text>);
        });
    }
}